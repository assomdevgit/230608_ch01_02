# 출력
## 값을 여러 개 출력하기
'''
print에는 변수나 값 여러 개를 ,(콤마)로 구분하여 넣을 수 있음
print(값1, 값2, 값3)
print(변수1, 변수2, 변수3)
'''
print(1, 2, 3) # print 한 번에 엔터 한 번
a = 10
print(10, a, "10")
# 여러 개의 값을 넣을 때, 기본적으로 print(출력) 시에 ' ' 구분해줌
print(10, a, "10", sep='-')

# print에 변수나 값을 콤마로 구분해서 넣으면 각 값이 공백으로 띄워져서 한 줄로 출력
# (값을 여러 개 출력할 때 print 함수를 여러 번 쓰지 않아도 됨)

# 구분자를 변환
# 값 사이에 공백이 아닌 다른 문자를 넣고 싶을  때는 print의 sep에 문자 또는 문자열을 지정(sep는 구분자라는 뜻의 **sep**arator에서 따옴)
'''
print(값1, 값2, sep='문자 또는 문자열')
print(변수1, 변수2, sep='문자 또는 문자열')
'''
print(1, 2, 3, sep=',')
print(1, 2, 3)
print("그냥", "붙여서", "공백없이", sep='')

# 줄바꿈 활용하기
# print에 값을 여러 개 지정하면 한 줄에 모든 값이 출력
print("개", "고양이", "돼지")
# sep => 개행 문자(줄바굼 문자 = Enter = \n)
print("가", "이", "가", sep="\n")
print("1\n2\n3")

# end 사용하기
# print("...", sep=" ", end="\n")
print("1", "2", "3")
print("1", end="")
print("2", end="")
print("3", end="")

print()
# 3자리마디 _(밑줄)로 끊어서 작성해도 붙여서 나온다. (통화구분)
print(1000000) # 1000000
print(1_000_000) # 1000000

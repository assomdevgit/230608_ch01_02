# 변수와 입력
## 변수 만들기
x = 10 # x라는 이름의 '변수'에 10이라는 값을 할당한다(대입한다)
'''
* x 10 이라고 입력하면, 10이 들어있는 변수 x가 만들어짐
* 즉, 변수이름 = 값 형식. 이렇게 하면 변수가 생성(선언)되는 동시에 값이 할당(저장)
* 변수 이름을 지을 때 일종의 규칙이 있음. (제약조건)
 - 영문 문자와 숫자를 사용할 수 있음 (일반적으로 한글도 가능하긴 함)
 - 대소문자를 구분합니다. (Apple <> apple)은 다른 표현
 - 문자로 시작해야함 (숫자부터 시작하면 안됨) 1hello (x)
 - _(밑줄, 언더바)로 시작할 수 있음. _x, _y 같은 게 가능
 - 특수문자(+,-,*,/,$,@,&,% 등)는 사용할 수 있음 (_만 빼고)
 - 파이썬의 키워드(미리 사용을 정의한 단어들)은 사용할 수 없음 (if, else, for, while 등)
'''
print(x) # 10
# 변수에는 숫자만 넣을 수 있나? (x)
# 변수에는 숫자뿐만 아니라 문자열(String)도 넣을 수 있음.
y = "양평해장국"
print(y) # 양평해장국
print(x, y) # 전체 스크립트가 실행되는 한은 변수의 값은 유지가 됨

# 실수, 정수.... <- 자료형 => 데이터가 가지고 있는 특성의 분류
# 변수는 값을 담는 그릇, 보관함 => 변수는 자신이 가지고 있는 값에 따라 자료형이 달라짐.

# 자료형 확인하기
# * type(변수명)
print(type(x), type(y)) # <class 'int'> <class 'str'>
print(x)
x = "순대국밥"
print(x) # 순대국밥 -> 변수에 다른 값을 새로 대입할 수 있다
print(type(x)) # <class 'str'>
# ---
# int는 정수(Integer), str은 문자열(String)에 따름.
# 즉, 변수의 자료형은 변수에 어떤 값이 들어가나에 따라 달라짐

# 할당 연산자 (대입연산자) =.
'''
* 수학에서 = (등호) 기호는 양 변(쪽)이 같다라는 뜻
* 프로그래밍 언언에서는 =는 변수(왼쪽)에 값(오른쪽)을 할당(assignment)한다는 의미
* 수학에서 등호의 역할을 하는 연산자는 ==(동등연산자)
(R은 ... =을 동등연산자로 씀... 대입연산자? <-, ->.)
'''

x = "사과" # x <- 사과
y = 1234 # y <- 1234
print(x, y)

# 변수 여러 개를 한 번에 만드는 방법
a = 10; b = 20; c = 30
print(a, b, c)
x, y, z = 33, 66, 99 # 언팩킹 --> 갯수만 맞추면 n개의 변수에 n개의 값을 바로 대입.
print(x, y, z)

x = 10, 20 # 왼쪽(변수)와 오른쪽(값)의 갯수가 안 맞는다면? 1: 다수는 괜찮음.
print(x)
print(type(x)) # <class 'tuple'>

# **수가 안맞아서 언팩킹 실패**
# x, y = 10, 20, 30 # 오류 코드 대입하는 값의 수가 맞지 않음 언팩킹 실패


# 변수 여러 개를 만들 때, 값이 모두 같아도 된다면?
x = y = z = 10 # z = 10 -> y = 10 -> x = 10
print(x, y, z)

# 두 변수의 값으 바꾸려면?
x, y = 17, 29 # 왼쪽 오른쪽 짝만 맞으면 한 번에 가능
print(x, y)
x, y = y, x # 파이썬은 이런 식으로, 두 변수의 위치와 값을 변환.
print(x, y)

# 빈 변수 만들기
x = None # x라는 변수의 이름은 존재하게 하고 싶은데, 특별한 값을 넣고 싶지 않을 때
print(x)
# 파이썬에서는 None은 아무것도 없는 상태를 나타내는 자료형
# 보통 다른 언어에서는 널(Null)이라고 표현

# 변수로 계산하기 (변수는 값을 담고 있는 그릇 -> 변수들끼리의 연산)
a = 10
b = 25
print(a + b) # 35
c = a + b # c안에는 a+b 이 담겨져 있다 -> 10 + 25 담겨져 있다
print(c) # 35

'''
 - 변수 a, b에 숫자를 할당한 뒤에 a와 b의 값을 더해서 변수 c에 할당
'''

# 사칙연산 -> 산술연산 -> 기호들 ... => 산술연산자(arithmetic operator)

a = 10
print(a) # 10
a + 20 # 대입을 안했으니깐... -> 휘발. 저장(x)
print(a) # 10
a = a + 20
print(a) # 30

# 파이썬에선는 변수를 두 번 대입하지 않게 하기 위해 산술 연산 후 할당 연산자를 제공
a += 20
print(a) # 50

# +=처럼 산술연산자들에 =을 붙이면 연산결과를 변수에 저장하는 작업
# + = <- 두 연산자 사이에 공백이 있으면 안됩니다!
a -= 10 # a = a - 10
print(a) # 40

# 한 번도 만들지 않았던 변수에 산술대입연산자를 써버리면...
# 없는 거에다가 산술계산을 하고, 대입을 하려하면.. 오류!
# ++, -- (1씩 증감시키는 연산자) => 파이썬엔 없음. a+=1, a-=1.
# -> 증감식 자체가 없음

# 부호 붙이기
# 만양에 음수와 양수간의 전환을 하고 싶다?
x = -10
print(+x, -x) # -10, 10
print(x * 1, x * (-1))








